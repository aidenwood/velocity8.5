<!-- SVG CSS and Animate for Aidxn Moving Logo -->
<!-- Velocity8 Large Slider Settings -->
<style>
  svg{width:100%;height:100%;perspective:50px}circle{stroke:#26003A;stroke-width:8px;fill:none}.equator{stroke:#a600ff;transform:rotateZ(-20deg) rotateX(125deg)}.meridian{animation:2s linear infinite turn;transform:rotateZ(-20deg) rotateX(35deg) rotateY(var(--start))}@keyframes turn{100%{transform:rotateZ(-20deg) rotateX(35deg) rotateY(var(--end))}}

/* Full Width Section CSS */
.hero {
  max-width: 1280px;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  -ms-flex-pack: center;
  justify-content: center;
  -ms-flex-align: center;
  align-items: flex-start;
  margin: 120px 0;
}

.contain {
  height: 100%;
  width: 100%;
  display: flex;
  flex-direction: column;
  -ms-flex-pack: center;
  justify-content: center;
  -ms-flex-align: center;
  align-items: flex-start;
}
</style>


<section class="hero px-2 xs:px-4 md:px-8">
  <div class="contain">
    
    <div class="w-full max-w-4xl mx-auto block lg:absolute backdrop-blur-xl z-20 border-primary-900/10 dark:border-primary-300/30 bg-primary-300/50 dark:bg-primary-700/10 duration-200 rounded-3xl border px-6 md:px-8 py-12">
      <h3 class="font-thin text-xs tracking-widest uppercase">
        <slot name="smltitle">Aidxn Design</slot>
      </h3>
      <h2 class="font-medium md:tracking-tight tracking-tighter leading-snug text-2xl xs:text-3xl lg:text-5xl max-w-4xl my-6">
        <slot name="title">Title</slot>
      </h2>     
      <div class="">
        <form netlify
          action="https://api.web3forms.com/submit"
          method="POST"
          id="form"
          class="needs-validation grid grid-cols-1 md:grid-cols-2 gap-6 my-8"
          novalidate>
          <input type="hidden" name="access_key" value="1e0ffadd-2f05-471b-bbc2-36fa32793837" />
          <!-- Create your free access key from https://web3forms.com/ -->
          <input type="checkbox" class="hidden" style="display:none" name="botcheck" />
          <div class="col-span-1">
            <input
              type="text"
              placeholder="Name"
              required
              class="w-1/2 sm:w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
              name="name"
            />
            <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
              Please provide your full name.
            </div>
          </div>
          <div class="col-span-1">
            <label for="phone" class="sr-only">Phone Number</label><input
              id="phone"
              type="text"
              placeholder="Phone"
              name="phone"
              required
              class="w-1/2 sm:w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
            />
            <div class="empty-feedback text-red-400 text-sm mt-1">
              Please provide your phone number.
            </div>
            <div class="invalid-feedback text-red-400 text-sm mt-1">
              Please provide a valid phone number.
            </div>
          </div>
          <div class="col-span-2">
            <label for="email_address" class="sr-only">Email Address</label><input
              id="email_address"
              type="email"
              placeholder="Email"
              name="email"
              required
              class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
            />
            <div class="empty-feedback text-red-400 text-sm mt-1">
              Please provide your email address.
            </div>
            <div class="invalid-feedback text-red-400 text-sm mt-1">
              Please provide a valid email address.
            </div>
          </div>
          <div class="col-span-2">
            <textarea
              name="message"
              required
              placeholder="Curious about anything inparticular?"
              class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none h-36 focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
            ></textarea>
            <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
              Please enter your message.
            </div>
            <input type="hidden" class="sourceLogging" id="hiddenKey02" name="Contacted on Page" data-name="formUrl1" value="">
            <input type="hidden" class="sourceLogging" id="hiddenKey03" name="Previous Page" data-name="formRef1" value="">
          </div>
          <button
            class="mt-8 bg-primary-600 dark:bg-primary-400 hover:bg-primary-700 dark:hover:bg-primary-300 focus-visible:outline-primary-600 dark:focus-visible:outline-primary-400 dark:text-primary-950 inline-flex items-center justify-center rounded-full border border-transparent px-5 py-3 text-base font-medium text-white transition focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2"
            type="submit"
          >
            Submit
          </button>
          <div id="result" class="mt-3 text-center"></div>
        </form>
      </div>
    </div>
    <div style="" class="w-1/2 lg:w-3/4 mx-auto lg:mr-0 -mt-36 lg:mt-8 -z-50">      
      <div id="animationWrapper" translate="no" transition:name="meridian">
        <svg viewBox="-500 -500 1000 1000" class="w-full">
          <circle r="450"></circle>
          <circle class="equator" r="450"></circle>
          <circle class="meridian" r="450" style="--start:165deg; --end:180deg"></circle>
          <circle class="meridian" r="450" style="--start:150deg; --end:165deg"></circle>
          <circle class="meridian" r="450" style="--start:135deg; --end:150deg"></circle>
          <circle class="meridian" r="450" style="--start:120deg; --end:135deg"></circle>
          <circle class="meridian" r="450" style="--start:105deg; --end:120deg"></circle>
          <circle class="meridian" r="450" style="--start:90deg; --end:105deg"></circle>
          <circle class="meridian" r="450" style="--start:75deg; --end:90deg"></circle>
          <circle class="meridian" r="450" style="--start:60deg; --end:75deg"></circle>
          <circle class="meridian" r="450" style="--start:45deg; --end:60deg"></circle>
          <circle class="meridian" r="450" style="--start:30deg; --end:45deg"></circle>
          <circle class="meridian" r="450" style="--start:15deg; --end:30deg"></circle>
          <circle class="meridian" r="450" style="--start:0deg; --end:15deg"></circle>
        </svg>
      </div>
      
    </div>
  </div>
</section>


<style>
  .invalid-feedback,
  .empty-feedback {
    display: none;
  }

  .was-validated :placeholder-shown:invalid ~ .empty-feedback {
    display: block;
  }

  .was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
    display: block;
  }

  .is-invalid,
  .was-validated :invalid {
    border-color: #dc3545;
  }
</style>

<script is:inline>
  const form = document.getElementById("form");
  const result = document.getElementById("result");

  form.addEventListener("submit", function (e) {
    e.preventDefault();
    form.classList.add("was-validated");
    if (!form.checkValidity()) {
      form.querySelectorAll(":invalid")[0].focus();
      return;
    }
    const formData = new FormData(form);
    const object = Object.fromEntries(formData);
    const json = JSON.stringify(object);

    result.innerHTML = "Sending...";

    fetch("https://api.web3forms.com/submit", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Accept: "application/json",
      },
      body: json,
    })
      .then(async (response) => {
        let json = await response.json();
        if (response.status == 200) {
          result.classList.add("text-green-500");
          result.innerHTML = json.message;
        } else {
          console.log(response);
          result.classList.add("text-red-500");
          result.innerHTML = json.message;
        }
      })
      .catch((error) => {
        console.log(error);
        result.innerHTML = "Something went wrong!";
      })
      .then(function () {
        form.reset();
        form.classList.remove("was-validated");
        setTimeout(() => {
          result.style.display = "none";
        }, 5000);
      });
  });
</script>
<script> 
	{
		document.getElementById('hiddenKey02').value = location.pathname;
		document.getElementById('hiddenKey03').value = document.referrer;
	}
</script>